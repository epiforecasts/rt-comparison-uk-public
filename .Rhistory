?EpiNow2::regional_epinow
rm(list=ls())
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/format-rt-breakpoint.R')
Sys.Date()
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/breakpoint-effects.R')
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/format-rt-breakpoint.R')
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/format-rt-breakpoint.R')
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/breakpoint-effects.R')
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/plot-breakpoint.R')
models
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(plot(readRDS(here::here("rt-estimate/estimate-break", Sys.Date(), "sw-wales-ni.rds"))))
# Plot data --------------------------------------------------------------------
# get private data
# raw <- readRDS(path.expand(file.path("~", "code", "covid19_uk_forecast_data", "data", "processed", "latest_data.rds")))
raw <- readRDS(path.expand(file.path("C:", "Users", "kaths", "Github", "covid19_uk_forecast_data", "data", "processed", "latest_data.rds")))
View(raw)
dir.exists(here::here("rt-estimate", "estimate-break", Sys.Date()))
if (!dir.exists(here::here("rt-estimate", "estimate-break", Sys.Date()))) {
dir.create(here::here("rt-estimate", "estimate-break", Sys.Date()))
}
?file.copy
# Run report
file.copy(from = here::here("rt-estimate", "estimate-break", "generic-report.R"),
to = here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
# Run report
file.copy(from = here::here("rt-estimate", "estimate-break", "generic-report.R"),
to = here::here("rt-estimate", "estimate-break", Sys.Date()))
# Run report
file.create(here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
file.copy(from = here::here("rt-estimate", "estimate-break", "generic-report.R"),
to = here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
file.copy(from = here::here("rt-estimate", "estimate-break", "generic-report.R"),
to = here::here("rt-estimate", "estimate-break", Sys.Date()))
# Run report
file.create(here::here("rt-estimate", "estimate-break", Sys.Date(), "generic-report.R"))
file.copy(from = here::here("rt-estimate", "estimate-break", "generic-report.R"),
to = here::here("rt-estimate", "estimate-break", Sys.Date()))
here::here("rt-estimate", "estimate-break", Sys.Date())
here::here("rt-estimate", "estimate-break", Sys.Date(), "generic-report.R")
file.copy(here::here("rt-estimate", "estimate-break", "generic-report.R"),
here::here("rt-estimate", "estimate-break", Sys.Date()))
file.copy(here::here("rt-estimate", "estimate-break", "generic-report.R"),
here::here("rt-estimate", "estimate-break", Sys.Date()), "report.R")
file.copy(here::here("rt-estimate", "estimate-break", "generic-report.R"),
here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"), overwrite = TRUE)
file.copy(here::here("rt-estimate", "estimate-break", "generic-report.R"),
here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
source(here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
here::here("rt-estimate", "estimate-break", "generic-report.R")
# Run report
file.copy(here::here("rt-estimate", "estimate-break", "generic-report.R"),
here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
View(raw)
rm(list=ls())
library(ggplot2); library(magrittr); library(patchwork); library(rvest); library(stringr)
# Get region names and plotting colours
source("utils/utils.R")
date_min <- as.Date("2020-04-04")
date_max <- max(summary$date)
theme_set(theme_classic(base_size = 15))
# Rt settings -------------------------------------------------------------
# Rt
source("compare/plots/plot-rt.R")
summary <- readRDS("rt-estimate/estimate-all-time/summary_truncated.rds")
# Set data source names
summary <- summary %>%
dplyr::mutate('Data source' = dplyr::recode_factor(source,
"cases_test" = "Test-positive",
"cases_hosp" = "Hospital admissions",
"deaths_death" = "Deaths"))
# Set y-axis
scale_min <- 0.5
scale_max <- 1.3
# Plot with data  --------------------------------------------------------------
source("compare/plots/plot-data.R")
# Using functions to plot each region
region_list <- as.list(region_names$region_factor)
names(region_list) <- region_names$region_factor
region_plot_data <- purrr::map(region_list,
~ plot_data_fn(region_name = .x))
region_plot_rt <- purrr::map(region_list,
~ plot_rt_fn(region_name = .x))
plot_everywhere <- (region_plot_data[[1]] + region_plot_rt[[1]] +
plot_layout(tag_level = "new",
widths = c(2,5)) &
theme(axis.text.x = element_blank())) /
(region_plot_data[[2]] + region_plot_rt[[2]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[3]] + region_plot_rt[[3]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[4]] + region_plot_rt[[4]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[5]] + region_plot_rt[[5]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[6]] + region_plot_rt[[6]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[7]] + region_plot_rt[[7]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[8]] + region_plot_rt[[8]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.title.y = element_text())) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = c("A", "1"),
tag_sep = "(",
tag_suffix = ")") &
theme(legend.position = "bottom",
text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.subtitle = element_text(size = 20),
plot.tag = element_text(size = 15))
region_plot_data <- purrr::map(region_list,
~ plot_data_fn(region_name = .x))
region_plot_rt <- purrr::map(region_list,
~ plot_rt_fn(region_name = .x))
date_max <- max(summary$date)
region_plot_data <- purrr::map(region_list,
~ plot_data_fn(region_name = .x))
region_plot_rt <- purrr::map(region_list,
~ plot_rt_fn(region_name = .x))
plot_everywhere <- (region_plot_data[[1]] + region_plot_rt[[1]] +
plot_layout(tag_level = "new",
widths = c(2,5)) &
theme(axis.text.x = element_blank())) /
(region_plot_data[[2]] + region_plot_rt[[2]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[3]] + region_plot_rt[[3]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[4]] + region_plot_rt[[4]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[5]] + region_plot_rt[[5]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[6]] + region_plot_rt[[6]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[7]] + region_plot_rt[[7]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[8]] + region_plot_rt[[8]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.title.y = element_text())) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = c("A", "1"),
tag_sep = "(",
tag_suffix = ")") &
theme(legend.position = "bottom",
text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.subtitle = element_text(size = 20),
plot.tag = element_text(size = 15))
ggsave(here::here("figures", paste0(Sys.Date(), "-rt-with-data.png")),
plot_everywhere, dpi = 80, height = 18, width = 15)
region_plot_data <- purrr::map(region_list,
~ plot_data_fn(region_name = .x))
region_plot_rt <- purrr::map(region_list,
~ plot_rt_fn(region_name = .x))
region_plot_data[[1]]
region_plot_data[[2]]
region_plot_rt[[1]]
summary <- readRDS("rt-estimate/estimate-all-time/summary_truncated.rds")
# Set data source names
summary <- summary %>%
dplyr::mutate(`Data source` = dplyr::recode_factor(source,
"cases_test" = "Test-positive",
"cases_hosp" = "Hospital admissions",
"deaths_death" = "Deaths"))
# Set y-axis
scale_min <- 0.5
scale_max <- 1.3
# Plot with data  --------------------------------------------------------------
source("compare/plots/plot-data.R")
# Using functions to plot each region
region_list <- as.list(region_names$region_factor)
names(region_list) <- region_names$region_factor
region_plot_data <- purrr::map(region_list,
~ plot_data_fn(region_name = .x))
region_plot_rt <- purrr::map(region_list,
~ plot_rt_fn(region_name = .x))
region_plot_rt[[1]]
names(summary)
summary <- readRDS("rt-estimate/estimate-all-time/summary_truncated.rds")
# Set data source names
summary <- summary %>%
dplyr::mutate(`Data source` = dplyr::recode_factor(source,
"cases_test" = "Test-positive",
"cases_hosp" = "Hospital admissions",
"deaths_death" = "Deaths"))
names(summary)
# Set y-axis
scale_min <- 0.5
scale_max <- 1.3
# Plot with data  --------------------------------------------------------------
source("compare/plots/plot-data.R")
# Using functions to plot each region
region_list <- as.list(region_names$region_factor)
names(region_list) <- region_names$region_factor
region_plot_data <- purrr::map(region_list,
~ plot_data_fn(region_name = .x))
region_plot_rt <- purrr::map(region_list,
~ plot_rt_fn(region_name = .x))
plot_everywhere <- (region_plot_data[[1]] + region_plot_rt[[1]] +
plot_layout(tag_level = "new",
widths = c(2,5)) &
theme(axis.text.x = element_blank())) /
(region_plot_data[[2]] + region_plot_rt[[2]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[3]] + region_plot_rt[[3]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[4]] + region_plot_rt[[4]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[5]] + region_plot_rt[[5]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[6]] + region_plot_rt[[6]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[7]] + region_plot_rt[[7]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[8]] + region_plot_rt[[8]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.title.y = element_text())) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = c("A", "1"),
tag_sep = "(",
tag_suffix = ")") &
theme(legend.position = "bottom",
text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.subtitle = element_text(size = 20),
plot.tag = element_text(size = 15))
region_plot_rt[[1#]]
region_plot_rt[[1]]
region_plot_rt <- purrr::map(region_list,
~ plot_rt_fn(region_name = .x))
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/compare/plots/plot-rt.R', echo=TRUE)
region_plot_rt <- purrr::map(region_list,
~ plot_rt_fn(region_name = .x, summary = summary))
region_plot_rt[[1]]
summary <- readRDS("rt-estimate/estimate-all-time/summary_truncated.rds") %>%
dplyr::mutate(`Data source` = dplyr::recode_factor(source,
"cases_test" = "Test-positive",
"cases_hosp" = "Hospital admissions",
"deaths_death" = "Deaths"))
region_plot_rt <- purrr::map(region_list,
~ plot_rt_fn(region_name = .x, summary = summary))
region_plot_rt[[1]]
plot_everywhere <- (region_plot_data[[1]] + region_plot_rt[[1]] +
plot_layout(tag_level = "new",
widths = c(2,5)) &
theme(axis.text.x = element_blank())) /
(region_plot_data[[2]] + region_plot_rt[[2]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[3]] + region_plot_rt[[3]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[4]] + region_plot_rt[[4]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[5]] + region_plot_rt[[5]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[6]] + region_plot_rt[[6]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[7]] + region_plot_rt[[7]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.text.x = element_blank(),
axis.title.y = element_text())) /
(region_plot_data[[8]] + region_plot_rt[[8]]+
plot_layout(tag_level = "new",
widths = c(2,5))&
theme(axis.title.y = element_text())) +
plot_layout(guides = "collect") +
plot_annotation(tag_levels = c("A", "1"),
tag_sep = "(",
tag_suffix = ")") &
theme(legend.position = "bottom",
text = element_text(size = 20),
axis.text = element_text(size = 20),
plot.subtitle = element_text(size = 20),
plot.tag = element_text(size = 15))
ggsave(here::here("figures", paste0(Sys.Date(), "-rt-with-data.png")),
plot_everywhere, dpi = 80, height = 18, width = 15)
warnings()
?ggsave
ggsave(here::here("figures", paste0(Sys.Date(), "-rt-with-data.png")),
plot_everywhere, dpi = "print", height = 18, width = 15)
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/compare/plots/plot-rt.R', echo=TRUE)
rm(list=ls())
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/compare/plots/plot-all.R', echo=TRUE)
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/compare/plots/plot-all.R', echo=TRUE)
library(ggplot2); library(magrittr); library(patchwork); library(rvest); library(stringr)
# Get region names and plotting colours
source("utils/utils.R")
date_min <- as.Date("2020-04-04")
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/compare/plots/plot-all.R', echo=TRUE)
rm(list=ls())
library(ggplot2); library(magrittr); library(patchwork); library(rvest); library(stringr)
# Get region names and plotting colours
source("utils/utils.R")
# Rt settings -------------------------------------------------------------
# Rt
source("compare/plots/plot-rt.R")
summary <- readRDS("rt-estimate/estimate-all-time/summary_truncated.rds") %>%
dplyr::mutate(`Data source` = dplyr::recode_factor(source,
"cases_test" = "Test-positive",
"cases_hosp" = "Hospital admissions",
"deaths_death" = "Deaths"))
# Plot settings ---------------------------------------------------------
# consistent date axis:
date_min <- as.Date("2020-04-04")
date_max <- max(summary$date)
# theme
theme_set(theme_classic(base_size = 15))
# Set y-axis
scale_min <- 0.5
scale_max <- 1.3
names(summary)
# Plot with data  --------------------------------------------------------------
source("compare/plots/plot-data.R")
names(summary)
rm(list=ls())
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/compare/plots/plot-all.R', echo=TRUE)
ggsave(here::here("figures", paste0(Sys.Date(), "-rt-with-data.jpeg")),
plot_everywhere, dpi = "print", height = 18, width = 15)
rm(list=ls())
# General Rt comparison
library(magrittr); library(ggplot2)
# Set up ------------------------------------------------------------------
source("utils/utils.R")
summary <- readRDS("rt-estimate/summary.rds")
summary <- dplyr::mutate(summary,
week = lubridate::week(date),
month = lubridate::month(date))
summary_source_region <- split(summary, summary$source)
summary_source_region <- purrr::map(summary_source_region, ~ split(.x, .x$region))
# First peak -------------------------------------------------------------------------
early_peak <- summary %>%
select(-type) %>%
filter(date < "2020-05-01") %>%
group_by(source, region) %>%
slice_max(median)
rm(list=ls())
# General Rt comparison
library(magrittr); library(ggplot2)
# Set up ------------------------------------------------------------------
source("utils/utils.R")
summary <- readRDS("rt-estimate/summary.rds")
summary <- readRDS("rt-estimate/summary-all-time.rds")
summary <- readRDS("rt-estimate/estimate-all-time.rds")
summary <- readRDS("rt-estimate/estimate-all-time/summary-truncated.rds")
summary <- readRDS("rt-estimate/estimate-all-time/summary_truncated.rds")
summary <- dplyr::mutate(summary,
week = lubridate::week(date),
month = lubridate::month(date))
summary_source_region <- split(summary, summary$source)
summary_source_region <- purrr::map(summary_source_region, ~ split(.x, .x$region))
# First peak -------------------------------------------------------------------------
early_peak <- summary %>%
select(-type) %>%
filter(date < "2020-05-01") %>%
group_by(source, region) %>%
slice_max(median)
# General time series features -------------------------------------------------------
# See all TS features
tsfeats <- purrr::map_depth(.depth = 2,
summary_source_region,
~ tsfeatures::tsfeatures(.x[["median"]])) %>%
purrr::map(., ~ dplyr::bind_rows(., .id = "region")) %>%
dplyr::bind_rows(., .id = "source")
rm(list=ls())
# Rt crossing 1: end of first wave -----------------------------------------------------------------
# Check timing of first wave cross below 1
source("utils/utils.R")
summary <- readRDS("rt-estimate/estimate-all-time/summary_truncated.rds")
# Cases
rt1 <- summary %>%
dplyr::group_by(region, source) %>%
dplyr::filter(median < 1  & date <= "2020-07-01") %>%
dplyr::filter(date == min(date)) %>%
dplyr::select(source, region, rt = date) %>%
dplyr::left_join(summary %>%
dplyr::group_by(region, source) %>%
dplyr::filter(lower_90 < 1 & date <= "2020-07-01") %>%
dplyr::filter(date == min(date)) %>%
dplyr::select(source, region, rt = date),
by = c("region", "source")) %>%
dplyr::left_join(summary %>%
dplyr::group_by(region, source) %>%
dplyr::filter(upper_90 < 1 & date <= "2020-07-01") %>%
dplyr::filter(date == min(date)) %>%
dplyr::select(source, region, rt = date),
by = c("region", "source")) %>%
dplyr::rename(median = rt.x,
lower = rt.y,
upper = rt) %>%
dplyr::mutate(region = factor(region, levels = region_names$region_factor))
rt1_plot <- rt1 %>%
dplyr::mutate(source = factor(source,
levels = c("cases_test", "cases_hosp", "deaths_death"),
labels = c("Test-positive", "Hospital admissions", "Deaths"))) %>%
dplyr::rename(`Data source` = source) %>%
ggplot(groups = region, colour = `Data source`) +
geom_point(aes(x = median, y = region, colour = `Data source`,
shape = `Data source`), size = 2) +
geom_linerange(aes(y = region, xmin = lower, xmax = upper,
colour = `Data source`)) +
labs(x = NULL, y = NULL) +
scale_color_manual(values = colours) +
theme_classic() +
theme(legend.position = "bottom") +
ggsave(paste0("figures/", Sys.Date(), "-rt-cross-1.png"),
height = 2, width = 6)
rt1_plot <- rt1 %>%
dplyr::mutate(source = factor(source,
levels = c("cases_test", "cases_hosp", "deaths_death"),
labels = c("Test-positive", "Hospital admissions", "Deaths"))) %>%
dplyr::rename(`Data source` = source) %>%
ggplot(groups = region, colour = `Data source`) +
geom_point(aes(x = median, y = region, colour = `Data source`,
shape = `Data source`), size = 2) +
geom_linerange(aes(y = region, xmin = lower, xmax = upper,
colour = `Data source`)) +
labs(x = NULL, y = NULL) +
scale_color_manual(values = colours) +
theme_classic() +
theme(legend.position = "bottom") +
ggsave(paste0("figures/", Sys.Date(), "-rt-cross-1.png"),
dpi = "print",  height = 2, width = 6)
rm(list=ls())
install.packages("covidregionaldata")
covidregionaldata::cite()
covidregionaldata::cite
citation("covidregionaldata")
citation("EpiNow2")
?ggsave
# Merge plots
#source("rt-estimate/update-format.R")
library(ggplot2); library(magrittr); library(patchwork); library(rvest); library(stringr)
?ggsave
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/compare/plots/plot-all.R', echo=TRUE)
ggsave(here::here("figures", paste0(Sys.Date(), "-rt-with-data.tiff")),
plot_everywhere, dpi = "print", height = 18, width = 15)
ggsave(here::here("figures", paste0(Sys.Date(), "-RSTB20200283-figure-1.pdf")),
plot_everywhere, dpi = "print", height = 18, width = 15)
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/compare/plots/plot-cross-1.R', echo=TRUE)
