`TRUE` =
"The following funding sources are acknowledged as providing funding for the named authors. ") %>%
map2(.x = funding_statement, .y = ., .f=~paste0(.y, .x, "."))
author_order <-
my_sheet %>%
dplyr::anti_join(authors_in_this_paper) %>%
dplyr::pull(name) %>%
sample %>%
data.frame(name = .)
author_text <- author_order$name %>%
paste(collapse = ", ") %>%
paste0("The following authors were part of the Centre for Mathematical Modelling of Infectious Disease 2019-nCoV working group. Each contributed in processing, cleaning and interpretation of data, interpreted findings, contributed to the manuscript, and approved the work for publication: ", ., ".")
filename <- paste0("outputs/",
paste(my_paper_id,
gsub(pattern = "\\:",
replacement = "",
x = Sys.time()),
sub(pattern = "/",
replacement = "_",
x = Sys.timezone())),
".md")
printer <- file(
filename,
open = "w"
)
write(funding_statement$`TRUE`, file = printer)
write("\n", file = printer, append = T)
write(author_text, file = printer, append = T)
write("\n", file = printer, append = T)
write(funding_statement$`FALSE`, file = printer, append = T)
close(printer)
readr::write_csv(x = author_order, path = sub(pattern = "\\.md$", "\\.csv", x = filename))
install.packages("googlesheets4")
library(tidyverse)
library(googlesheets4)
library(magrittr)
my_paper_id <- "rt_comparison" # a string to identify your paper uniquely in the github repo
my_sheet <-  googlesheets4::read_sheet(
ss = "https://docs.google.com/spreadsheets/d/1CK0QdSkx4eLzTJLbB1jFfcW1OMaA_fjSlBxMCSHTLEY/",
sheet = 1) %>%
dplyr::filter(!is.na(`Initials for funding statement`))  %>%
dplyr::select(initials = `Initials for funding statement`,
grants = `Short grant details`,
name = `Name (as displayed)`)
my_sheet <-  googlesheets4::read_sheet(
ss = "https://docs.google.com/spreadsheets/d/1CK0QdSkx4eLzTJLbB1jFfcW1OMaA_fjSlBxMCSHTLEY/",
sheet = 1) %>%
dplyr::filter(!is.na(`Initials for funding statement`))  %>%
dplyr::select(initials = `Initials for funding statement`,
grants = `Short grant details`,
name = `Name (as displayed)`)
if (!dir.exists("outputs")){dir.create("outputs")}
# here you need to specify which authors (by initials), from the above data
# frame, are to be specified in the named authors, rather than working group
authors_in_this_paper <- data.frame(
initials = c("KS", "SA", "SRM", "JH", "JDM", "NIB", "SFunk"),
stringsAsFactors = F)
funding_texts <-
list(NIHR =
"This research was partly funded by the National Institute for Health Research (NIHR) using UK aid from the UK Government to support global health research. The views expressed in this publication are those of the author(s) and not necessarily those of the NIHR or the UK Department of Health and Social Care",
`Bill & Melinda Gates Foundation` =
"This research was partly funded by the Bill & Melinda Gates Foundation",
`Global Challenges Research Fund` =
"This research was partly funded by the Global Challenges Research Fund (GCRF) project 'RECAP' managed through RCUK and ESRC",
`UK Public Health Rapid Support Team` =
"Authors of this research receive funding from UK Public Health Rapid Support Team funded by the United Kingdom Department of Health and Social Care",
`European Commission` = "This project has received funding from the European Union's Horizon 2020 research and innovation programme - project EpiPose")
make_funding_statement <- function(x, funding_texts){
funding_statement <- x %>%
dplyr::select(initials, grants) %>%
dplyr::mutate(grants = ifelse(is.na(grants), "No funding", grants)) %>%
dplyr::mutate(grants = gsub(pattern = "B&MGF",
replacement = "Bill & Melinda Gates Foundation",
x = grants)) %>%
split(.$initials) %>%
purrr::map(~gsub(pattern = "(\\(|\\))", replacement = "", x = .x$grants, fixed = F)) %>%
purrr::map(~unlist(strsplit(x = .x, split = ", "))) %>%
purrr::map_df(~data.frame(grant = .x, stringsAsFactors = F), .id="initials") %>%
split(.$grant) %>%
purrr::map_df(.id = "grant", ~data.frame(initials = paste(.x$initials, collapse = ", "))) %>%
tidyr::separate(col = grant, sep=":\\s", into = c("body", "number")) %>%
dplyr::mutate(number = ifelse(is.na(number), "", number)) %>%
tidyr::unite(col = "grant", sep = ": ", number, initials) %>%
dplyr::mutate(grant = sub(pattern="^:\\s", replacement = "", x = grant)) %>%
dplyr::mutate(body = factor(body),
body = forcats::fct_inorder(body),
body = forcats::fct_relevel(body, "No funding", after = Inf)) %>%
dplyr::arrange(body) %>%
split(.$body) %>%
purrr::map(~paste0("(",
paste(.x$grant, collapse = "; "),
")") ) %>%
map2(.x = ., .y = names(.), .f = ~paste(.y, .x)) %>%
paste(., collapse = ". ")
for (i in 1:length(funding_texts)){
funding_statement <- sub(x = funding_statement,
pattern = names(funding_texts)[[i]],
replacement = funding_texts[[i]])
}
funding_statement
}
funding_statement <- my_sheet %>%
dplyr::full_join(
dplyr::mutate(authors_in_this_paper,
named = TRUE)) %>%
dplyr::mutate(named = !is.na(named)) %>%
split(.$named) %>%
purrr::map(~make_funding_statement(.x, funding_texts))
funding_statement <-
list(
`FALSE` =
"The following funding sources are acknowledged as providing funding for the working group authors. ",
`TRUE` =
"The following funding sources are acknowledged as providing funding for the named authors. ") %>%
map2(.x = funding_statement, .y = ., .f=~paste0(.y, .x, "."))
author_order <-
my_sheet %>%
dplyr::anti_join(authors_in_this_paper) %>%
dplyr::pull(name) %>%
sample %>%
data.frame(name = .)
author_text <- author_order$name %>%
paste(collapse = ", ") %>%
paste0("The following authors were part of the Centre for Mathematical Modelling of Infectious Disease 2019-nCoV working group. Each contributed in processing, cleaning and interpretation of data, interpreted findings, contributed to the manuscript, and approved the work for publication: ", ., ".")
filename <- paste0("outputs/",
paste(my_paper_id,
gsub(pattern = "\\:",
replacement = "",
x = Sys.time()),
sub(pattern = "/",
replacement = "_",
x = Sys.timezone())),
".md")
printer <- file(
filename,
open = "w"
)
write(funding_statement$`TRUE`, file = printer)
write("\n", file = printer, append = T)
write(author_text, file = printer, append = T)
write("\n", file = printer, append = T)
write(funding_statement$`FALSE`, file = printer, append = T)
close(printer)
readr::write_csv(x = author_order, path = sub(pattern = "\\.md$", "\\.csv", x = filename))
my_paper_id <- "rt_comparison" # a string to identify your paper uniquely in the github repo
my_sheet <-  googlesheets4::read_sheet(
ss = "https://docs.google.com/spreadsheets/d/1CK0QdSkx4eLzTJLbB1jFfcW1OMaA_fjSlBxMCSHTLEY/",
sheet = 1) %>%
dplyr::filter(!is.na(`Initials for funding statement`))  %>%
dplyr::select(initials = `Initials for funding statement`,
grants = `Short grant details`,
name = `Name (as displayed)`)
if (!dir.exists("outputs")){dir.create("outputs")}
# here you need to specify which authors (by initials), from the above data
# frame, are to be specified in the named authors, rather than working group
authors_in_this_paper <- data.frame(
initials = c("KS", "SA", "SRM", "JH", "JDM", "NIB", "SFunk"),
stringsAsFactors = F)
funding_texts <-
list(NIHR =
"This research was partly funded by the National Institute for Health Research (NIHR) using UK aid from the UK Government to support global health research. The views expressed in this publication are those of the author(s) and not necessarily those of the NIHR or the UK Department of Health and Social Care",
`Bill & Melinda Gates Foundation` =
"This research was partly funded by the Bill & Melinda Gates Foundation",
`Global Challenges Research Fund` =
"This research was partly funded by the Global Challenges Research Fund (GCRF) project 'RECAP' managed through RCUK and ESRC",
`UK Public Health Rapid Support Team` =
"Authors of this research receive funding from UK Public Health Rapid Support Team funded by the United Kingdom Department of Health and Social Care",
`European Commission` = "This project has received funding from the European Union's Horizon 2020 research and innovation programme - project EpiPose")
make_funding_statement <- function(x, funding_texts){
funding_statement <- x %>%
dplyr::select(initials, grants) %>%
dplyr::mutate(grants = ifelse(is.na(grants), "No funding", grants)) %>%
dplyr::mutate(grants = gsub(pattern = "B&MGF",
replacement = "Bill & Melinda Gates Foundation",
x = grants)) %>%
split(.$initials) %>%
purrr::map(~gsub(pattern = "(\\(|\\))", replacement = "", x = .x$grants, fixed = F)) %>%
purrr::map(~unlist(strsplit(x = .x, split = ", "))) %>%
purrr::map_df(~data.frame(grant = .x, stringsAsFactors = F), .id="initials") %>%
split(.$grant) %>%
purrr::map_df(.id = "grant", ~data.frame(initials = paste(.x$initials, collapse = ", "))) %>%
tidyr::separate(col = grant, sep=":\\s", into = c("body", "number")) %>%
dplyr::mutate(number = ifelse(is.na(number), "", number)) %>%
tidyr::unite(col = "grant", sep = ": ", number, initials) %>%
dplyr::mutate(grant = sub(pattern="^:\\s", replacement = "", x = grant)) %>%
dplyr::mutate(body = factor(body),
body = forcats::fct_inorder(body),
body = forcats::fct_relevel(body, "No funding", after = Inf)) %>%
dplyr::arrange(body) %>%
split(.$body) %>%
purrr::map(~paste0("(",
paste(.x$grant, collapse = "; "),
")") ) %>%
map2(.x = ., .y = names(.), .f = ~paste(.y, .x)) %>%
paste(., collapse = ". ")
for (i in 1:length(funding_texts)){
funding_statement <- sub(x = funding_statement,
pattern = names(funding_texts)[[i]],
replacement = funding_texts[[i]])
}
funding_statement
}
funding_statement <- my_sheet %>%
dplyr::full_join(
dplyr::mutate(authors_in_this_paper,
named = TRUE)) %>%
dplyr::mutate(named = !is.na(named)) %>%
split(.$named) %>%
purrr::map(~make_funding_statement(.x, funding_texts))
View(funding_texts)
?file
filename <- paste0("outputs/",
paste(my_paper_id,
gsub(pattern = "\\:",
replacement = "",
x = Sys.time()),
sub(pattern = "/",
replacement = "_",
x = Sys.timezone())),
".md")
printer <- file(
filename,
open = "w"
)
write(funding_statement$`TRUE`, file = printer)
write("\n", file = printer, append = T)
write(author_text, file = printer, append = T)
write("\n", file = printer, append = T)
write(funding_statement$`FALSE`, file = printer, append = T)
close(printer)
readr::write_csv(x = author_order, path = sub(pattern = "\\.md$", "\\.csv", x = filename))
onset_to_admission_delay <- readRDS("C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate/delays/data/onset_to_admission_delay.rds")
View(onset_to_admission_delay)
onset_to_death_delay <- readRDS("C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate/delays/data/onset_to_death_delay.rds")
View(onset_to_death_delay)
generation_time <- readRDS("C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate/delays/data/generation_time.rds")
View(generation_time)
incubation_period <- readRDS("C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate/delays/data/incubation_period.rds")
View(incubation_period)
exp(1.621)
exp(1.4)
exp(2.3)
exp(incubation_period$mean_sd)
exp(incubation_period$sd)
exp(incubation_period$sd_sd)
exp(onset_to_admission_delay$mean)
exp(onset_to_admission_delay$mean_sd)
exp(onset_to_admission_delay$sd_sd)
exp(onset_to_admission_delay$sd_sd_sd)
exp(onset_to_admission_delay$sd_sd)
exp(onset_to_admission_delay$sd)
exp(onset_to_admission_delay$sd_sd)
exp(onset_to_death_delay$mean)
exp(onset_to_death_delay$mean_sd)
exp(onset_to_death_delay$sd)
exp(onset_to_death_delay$sd_sd)
citation("EpiNow2")
# Check % of time that one estimate is within the 50% CI of another estimate
summary_wide <- readRDS("rt-estimate/summary_wide.rds")
median_within <- summary_wide %>%
dplyr::filter(region %in% region_names$nhsregions) %>%
dplyr::mutate(med_case_admissions = ifelse(median_cases_blend > lower_50_cases_hosp &
median_cases_blend < upper_50_cases_hosp,
TRUE, FALSE),
med_admissions_death = ifelse(median_cases_hosp > lower_50_deaths_blend &
median_cases_hosp < upper_50_deaths_blend,
TRUE, FALSE),
lag_death_admissions = ifelse(dplyr::lag(median_deaths_blend, 7) > lower_50_cases_hosp &
dplyr::lag(median_deaths_blend, 7) < upper_50_cases_hosp,
TRUE, FALSE),
med_case_death = ifelse(median_cases_blend > lower_50_deaths_blend &
median_cases_blend < upper_50_deaths_blend,
TRUE, FALSE)
) %>%
dplyr::group_by(region) %>%
dplyr::summarise(perc_case_in_admissions = sum(med_case_admissions, na.rm=T) / sum(!is.na(med_case_admissions)),
perc_admissions_in_deaths = sum(med_admissions_death, na.rm=T) / sum(!is.na(med_admissions_death)),
perc_case_in_deaths = sum(med_case_death, na.rm=T) / sum(!is.na(med_case_death)),
lag_death_admissions = sum(lag_death_admissions, na.rm=T) / sum(!is.na(lag_death_admissions)))
library(magrittr)
# Check % of time that one estimate is within the 50% CI of another estimate
summary_wide <- readRDS("rt-estimate/summary_wide.rds")
median_within <- summary_wide %>%
dplyr::filter(region %in% region_names$nhsregions) %>%
dplyr::mutate(med_case_admissions = ifelse(median_cases_blend > lower_50_cases_hosp &
median_cases_blend < upper_50_cases_hosp,
TRUE, FALSE),
med_admissions_death = ifelse(median_cases_hosp > lower_50_deaths_blend &
median_cases_hosp < upper_50_deaths_blend,
TRUE, FALSE),
lag_death_admissions = ifelse(dplyr::lag(median_deaths_blend, 7) > lower_50_cases_hosp &
dplyr::lag(median_deaths_blend, 7) < upper_50_cases_hosp,
TRUE, FALSE),
med_case_death = ifelse(median_cases_blend > lower_50_deaths_blend &
median_cases_blend < upper_50_deaths_blend,
TRUE, FALSE)
) %>%
dplyr::group_by(region) %>%
dplyr::summarise(perc_case_in_admissions = sum(med_case_admissions, na.rm=T) / sum(!is.na(med_case_admissions)),
perc_admissions_in_deaths = sum(med_admissions_death, na.rm=T) / sum(!is.na(med_admissions_death)),
perc_case_in_deaths = sum(med_case_death, na.rm=T) / sum(!is.na(med_case_death)),
lag_death_admissions = sum(lag_death_admissions, na.rm=T) / sum(!is.na(lag_death_admissions)))
source("utils/utils.R")
source("utils/utils.R")
summary_wide <- readRDS("rt-estimate/summary_wide.rds")
median_within <- summary_wide %>%
dplyr::filter(region %in% region_names$nhsregions) %>%
dplyr::mutate(med_case_admissions = ifelse(median_cases_blend > lower_50_cases_hosp &
median_cases_blend < upper_50_cases_hosp,
TRUE, FALSE),
med_admissions_death = ifelse(median_cases_hosp > lower_50_deaths_blend &
median_cases_hosp < upper_50_deaths_blend,
TRUE, FALSE),
lag_death_admissions = ifelse(dplyr::lag(median_deaths_blend, 7) > lower_50_cases_hosp &
dplyr::lag(median_deaths_blend, 7) < upper_50_cases_hosp,
TRUE, FALSE),
med_case_death = ifelse(median_cases_blend > lower_50_deaths_blend &
median_cases_blend < upper_50_deaths_blend,
TRUE, FALSE)
) %>%
dplyr::group_by(region) %>%
dplyr::summarise(perc_case_in_admissions = sum(med_case_admissions, na.rm=T) / sum(!is.na(med_case_admissions)),
perc_admissions_in_deaths = sum(med_admissions_death, na.rm=T) / sum(!is.na(med_admissions_death)),
perc_case_in_deaths = sum(med_case_death, na.rm=T) / sum(!is.na(med_case_death)),
lag_death_admissions = sum(lag_death_admissions, na.rm=T) / sum(!is.na(lag_death_admissions)))
View(median_within)
colnames(median_within
)
summary <- tibble::tibble(vars = colnames(median_within[2:5]),
means = c(mean(median_within$perc_case_in_admissions),
mean(median_within$perc_case_in_deaths),
mean(median_within$perc_admissions_in_deaths),
mean(median_within$lag_death_admissions)),
sd = c(sd(median_within$perc_case_in_admissions),
sd(median_within$perc_case_in_deaths),
sd(median_within$perc_admissions_in_deaths),
sd(median_within$lag_death_admissions)))
View(summary)
median_within <- summary_wide %>%
dplyr::filter(region %in% region_names$nhsregions) %>%
dplyr::mutate(med_case_admissions = ifelse(median_cases_blend > lower_50_cases_hosp &
median_cases_blend < upper_50_cases_hosp,
TRUE, FALSE),
med_admissions_death = ifelse(median_cases_hosp > lower_50_deaths_blend &
median_cases_hosp < upper_50_deaths_blend,
TRUE, FALSE),
lag_death_admissions_0 = ifelse(median_deaths_blend > lower_50_cases_hosp &
median_deaths_blend < upper_50_cases_hosp,
TRUE, FALSE),
lag_death_admissions_7 = ifelse(dplyr::lag(median_deaths_blend, 7) > lower_50_cases_hosp &
dplyr::lag(median_deaths_blend, 7) < upper_50_cases_hosp,
TRUE, FALSE),
lag_death_admissions_14 = ifelse(dplyr::lag(median_deaths_blend, 14) > lower_50_cases_hosp &
dplyr::lag(median_deaths_blend, 14) < upper_50_cases_hosp,
TRUE, FALSE),
med_case_death = ifelse(median_cases_blend > lower_50_deaths_blend &
median_cases_blend < upper_50_deaths_blend,
TRUE, FALSE)
) %>%
dplyr::group_by(region) %>%
dplyr::summarise(perc_case_in_admissions = sum(med_case_admissions, na.rm=T) / sum(!is.na(med_case_admissions)),
perc_admissions_in_deaths = sum(med_admissions_death, na.rm=T) / sum(!is.na(med_admissions_death)),
perc_case_in_deaths = sum(med_case_death, na.rm=T) / sum(!is.na(med_case_death)),
lag_death_admissions_0 = sum(lag_death_admissions_0, na.rm=T) / sum(!is.na(lag_death_admissions_0)),
lag_death_admissions_7 = sum(lag_death_admissions_7, na.rm=T) / sum(!is.na(lag_death_admissions_7)),
lag_death_admissions_14 = sum(lag_death_admissions_14, na.rm=T) / sum(!is.na(lag_death_admissions_14)))
summary <- tibble::tibble(vars = colnames(median_within[2:7]),
means = c(mean(median_within$perc_case_in_admissions),
mean(median_within$perc_case_in_deaths),
mean(median_within$perc_admissions_in_deaths),
mean(median_within$lag_death_admissions_0),
mean(median_within$lag_death_admissions_7),
mean(median_within$lag_death_admissions_14)),
sd = c(sd(median_within$perc_case_in_admissions),
sd(median_within$perc_case_in_deaths),
sd(median_within$perc_admissions_in_deaths),
sd(median_within$lag_death_admissions_0),
mean(median_within$lag_death_admissions_7),
mean(median_within$lag_death_admissions_14)))
View(summary_wide)
median_within <- summary_wide %>%
dplyr::filter(region %in% region_names$nhsregions) %>%
dplyr::mutate(med_case_admissions = ifelse(median_cases_blend > lower_50_cases_hosp &
median_cases_blend < upper_50_cases_hosp,
TRUE, FALSE),
med_admissions_death = ifelse(median_cases_hosp > lower_50_deaths_blend &
median_cases_hosp < upper_50_deaths_blend,
TRUE, FALSE),
lag_death_admissions_0 = ifelse(median_deaths_blend > lower_50_cases_hosp &
median_deaths_blend < upper_50_cases_hosp,
TRUE, FALSE),
lag_death_admissions_7 = ifelse(dplyr::lag(median_deaths_blend, 7) > lower_50_cases_hosp &
dplyr::lag(median_deaths_blend, 7) < upper_50_cases_hosp,
TRUE, FALSE),
lag_death_admissions_14 = ifelse(dplyr::lag(median_deaths_blend, 14) > lower_50_cases_hosp &
dplyr::lag(median_deaths_blend, 14) < upper_50_cases_hosp,
TRUE, FALSE),
med_case_death = ifelse(median_cases_blend > lower_50_deaths_blend &
median_cases_blend < upper_50_deaths_blend,
TRUE, FALSE)
)
median_within <- summary_wide %>%
dplyr::filter(region %in% region_names$nhsregions) %>%
dplyr::mutate(med_case_admissions = ifelse(median_cases_blend > lower_50_cases_hosp &
median_cases_blend < upper_50_cases_hosp,
TRUE, FALSE),
med_admissions_death = ifelse(median_cases_hosp > lower_50_deaths_blend &
median_cases_hosp < upper_50_deaths_blend,
TRUE, FALSE),
lag_death_admissions_0 = ifelse(median_deaths_blend > lower_50_cases_hosp &
median_deaths_blend < upper_50_cases_hosp,
TRUE, FALSE),
lag_death_admissions_7 = ifelse(dplyr::lag(median_deaths_blend, 7) > lower_50_cases_hosp &
dplyr::lag(median_deaths_blend, 7) < upper_50_cases_hosp,
TRUE, FALSE),
lag_death_admissions_14 = ifelse(dplyr::lag(median_deaths_blend, 14) > lower_50_cases_hosp &
dplyr::lag(median_deaths_blend, 14) < upper_50_cases_hosp,
TRUE, FALSE),
med_case_death = ifelse(median_cases_blend > lower_50_deaths_blend &
median_cases_blend < upper_50_deaths_blend,
TRUE, FALSE)
) %>%
dplyr::group_by(region) %>%
dplyr::summarise(perc_case_in_admissions = sum(med_case_admissions, na.rm=T) / sum(!is.na(med_case_admissions)),
perc_admissions_in_deaths = sum(med_admissions_death, na.rm=T) / sum(!is.na(med_admissions_death)),
perc_case_in_deaths = sum(med_case_death, na.rm=T) / sum(!is.na(med_case_death)),
lag_death_admissions_0 = sum(lag_death_admissions_0, na.rm=T) / sum(!is.na(lag_death_admissions_0)),
lag_death_admissions_7 = sum(lag_death_admissions_7, na.rm=T) / sum(!is.na(lag_death_admissions_7)),
lag_death_admissions_14 = sum(lag_death_admissions_14, na.rm=T) / sum(!is.na(lag_death_admissions_14)))
median_within <- summary_wide %>%
dplyr::filter(region %in% region_names$nhsregions) %>%
dplyr::mutate(med_case_admissions = ifelse(median_cases_blend > lower_50_cases_hosp &
median_cases_blend < upper_50_cases_hosp,
TRUE, FALSE),
med_admissions_death_0 = ifelse(median_cases_hosp > lower_50_deaths_blend &
median_cases_hosp < upper_50_deaths_blend,
TRUE, FALSE),
lag_admissions_death_7 = ifelse(median_cases_hosp > dplyr::lag(lower_50_deaths_blend, 7) &
median_cases_hosp < dplyr::lag(upper_50_deaths_blend, 7),
TRUE, FALSE),
lag_admissions_death_14 = ifelse(median_cases_hosp > dplyr::lag(lower_50_deaths_blend, 14) &
median_cases_hosp < dplyr::lag(upper_50_deaths_blend, 14),
TRUE, FALSE),
med_case_death = ifelse(median_cases_blend > lower_50_deaths_blend &
median_cases_blend < upper_50_deaths_blend,
TRUE, FALSE)
) %>%
dplyr::group_by(region) %>%
dplyr::summarise(perc_case_in_admissions = sum(med_case_admissions, na.rm=T) / sum(!is.na(med_case_admissions)),
perc_admissions_in_deaths = sum(med_admissions_death, na.rm=T) / sum(!is.na(med_admissions_death)),
perc_case_in_deaths = sum(med_case_death, na.rm=T) / sum(!is.na(med_case_death)),
lag_death_admissions_0 = sum(lag_death_admissions_0, na.rm=T) / sum(!is.na(lag_death_admissions_0)),
lag_death_admissions_7 = sum(lag_death_admissions_7, na.rm=T) / sum(!is.na(lag_death_admissions_7)),
lag_death_admissions_14 = sum(lag_death_admissions_14, na.rm=T) / sum(!is.na(lag_death_admissions_14)))
median_within <- summary_wide %>%
dplyr::filter(region %in% region_names$nhsregions) %>%
dplyr::mutate(med_case_admissions = ifelse(median_cases_blend > lower_50_cases_hosp &
median_cases_blend < upper_50_cases_hosp,
TRUE, FALSE),
med_admissions_death_0 = ifelse(median_cases_hosp > lower_50_deaths_blend &
median_cases_hosp < upper_50_deaths_blend,
TRUE, FALSE),
lag_admissions_death_7 = ifelse(median_cases_hosp > dplyr::lag(lower_50_deaths_blend, 7) &
median_cases_hosp < dplyr::lag(upper_50_deaths_blend, 7),
TRUE, FALSE),
lag_admissions_death_14 = ifelse(median_cases_hosp > dplyr::lag(lower_50_deaths_blend, 14) &
median_cases_hosp < dplyr::lag(upper_50_deaths_blend, 14),
TRUE, FALSE),
med_case_death = ifelse(median_cases_blend > lower_50_deaths_blend &
median_cases_blend < upper_50_deaths_blend,
TRUE, FALSE)
) %>%
dplyr::group_by(region) %>%
dplyr::summarise(perc_case_in_admissions = sum(med_case_admissions, na.rm=T) / sum(!is.na(med_case_admissions)),
perc_case_in_deaths = sum(med_case_death, na.rm=T) / sum(!is.na(med_case_death)),
med_admissions_death_0 = sum(med_admissions_death_0, na.rm=T) / sum(!is.na(med_admissions_death_0)),
lag_admissions_death_7 = sum(lag_admissions_death_7, na.rm=T) / sum(!is.na(lag_admissions_death_7)),
lag_admissions_death_14 = sum(lag_admissions_death_14, na.rm=T) / sum(!is.na(lag_admissions_death_14)))
summary <- tibble::tibble(vars = colnames(median_within[2:7]),
means = c(mean(median_within$perc_case_in_admissions),
mean(median_within$perc_case_in_deaths),
mean(median_within$med_admissions_death_0),
mean(median_within$lag_admissions_death_7),
mean(median_within$lag_admissions_death_14)),
sd = c(sd(median_within$perc_case_in_admissions),
sd(median_within$perc_case_in_deaths),
sd(median_within$med_admissions_death_0),
mean(median_within$lag_admissions_death_7),
mean(median_within$lag_admissions_death_14)))
summary <- tibble::tibble(vars = colnames(median_within[2:6]),
means = c(mean(median_within$perc_case_in_admissions),
mean(median_within$perc_case_in_deaths),
mean(median_within$med_admissions_death_0),
mean(median_within$lag_admissions_death_7),
mean(median_within$lag_admissions_death_14)),
sd = c(sd(median_within$perc_case_in_admissions),
sd(median_within$perc_case_in_deaths),
sd(median_within$med_admissions_death_0),
mean(median_within$lag_admissions_death_7),
mean(median_within$lag_admissions_death_14)))
summary <- tibble::tibble(vars = colnames(median_within[2:6]),
means = c(mean(median_within$perc_case_in_admissions),
mean(median_within$perc_case_in_deaths),
mean(median_within$med_admissions_death_0),
mean(median_within$lag_admissions_death_7),
mean(median_within$lag_admissions_death_14)),
sd = c(sd(median_within$perc_case_in_admissions),
sd(median_within$perc_case_in_deaths),
sd(median_within$med_admissions_death_0),
sd(median_within$lag_admissions_death_7),
sd(median_within$lag_admissions_death_14)))
rm(list=ls())
