names(breakpoint_only_effect) <- c("cases", "admissions", "deaths")
breakpoint_only <- dplyr::bind_rows(breakpoint_only, .id = "source") %>%
dplyr::mutate(model = "single breakpoint") %>%
dplyr::filter(variable == "breakpoint")
breakpoint_only <- dplyr::bind_rows(breakpoint_only_effect, .id = "source") %>%
dplyr::mutate(model = "single breakpoint") %>%
dplyr::filter(variable == "breakpoint")
breakpoint_only_effect <- dplyr::bind_rows(breakpoint_only_effect, .id = "source") %>%
dplyr::mutate(model = "single breakpoint") %>%
dplyr::filter(variable == "breakpoint")
rm(breakpoint_only)
breakpoint_only_effect <- purrr::map2(.x = vars,
.y = regions,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .x, "/region/", .y,
"/2020-11-02/summarised_estimates.rds")))
names(breakpoint_only_effect) <- c("cases", "admissions", "deaths")
breakpoint_only_effect <- dplyr::bind_rows(breakpoint_only_effect, .id = "source") %>%
dplyr::mutate(model = "single breakpoint")
View(breakpoint_only_effect)
unique(breakpoint_only_effect$variable)
breakpoint_only_effect <- dplyr::bind_rows(breakpoint_only_effect, .id = "source") %>%
dplyr::mutate(model = "single breakpoint") %>%
dplyr::filter(variable == "breakpoints")
View(breakpoint_only_effect)
breakpoint_only_effect <- dplyr::bind_rows(breakpoint_only_effect, .id = "source") %>%
dplyr::mutate(model = "single breakpoint") %>%
dplyr::filter(variable == "breakpoints") %>%
dplyr::mutate(across(median:upper_90), exp(.))
breakpoint_only_effect <- dplyr::bind_rows(breakpoint_only_effect, .id = "source") %>%
dplyr::mutate(model = "single breakpoint") %>%
dplyr::filter(variable == "breakpoints") %>%
dplyr::mutate(dplyr::across(median:upper_90), exp(.))
breakpoint_only_effect <- dplyr::bind_rows(breakpoint_only_effect, .id = "source") %>%
dplyr::mutate(model = "single breakpoint") %>%
dplyr::filter(variable == "breakpoints") %>%
dplyr::mutate(dplyr::across(.cols = median:upper_90, .fns = exp(.)))
?across
breakpoint_only_effect <- dplyr::bind_rows(breakpoint_only_effect, .id = "source") %>%
dplyr::mutate(model = "single breakpoint") %>%
dplyr::filter(variable == "breakpoints") %>%
dplyr::mutate(dplyr::across(.cols = 6:14, .fns = exp(.)))
breakpoint_only_effect <- dplyr::bind_rows(breakpoint_only_effect, .id = "source") %>%
dplyr::mutate(model = "single breakpoint") %>%
dplyr::filter(variable == "breakpoints") %>%
dplyr::mutate(dplyr::across(.cols = 6:14, exp))
breakpoint_only_effect <- purrr::map2(.x = vars,
.y = regions,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .x, "/region/", .y,
"/2020-11-02/summarised_estimates.rds")))
names(breakpoint_only_effect) <- c("cases", "admissions", "deaths")
breakpoint_only_effect <- dplyr::bind_rows(breakpoint_only_effect, .id = "source") %>%
dplyr::mutate(model = "single breakpoint") %>%
dplyr::filter(variable == "breakpoints") %>%
dplyr::mutate(dplyr::across(.cols = 6:14, exp))
# Single breakpoint
breakpoint_only_effect <- purrr::map2(.x = vars,
.y = regions,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .x, "/region/", .y,
"/2020-11-02/summarised_estimates.rds")))
View(breakpoint_only_effect)
View(breakpoint_only_effect[[1]])
View(breakpoint_only_effect)
# Single breakpoint
breakpoint_only_effect <- purrr::map2(.x = vars,
.y = regions,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .x, "/region/", .y,
"/2020-11-02/summarised_estimates.rds")))
# Single breakpoint
breakpoint_only_effect <- purrr::map2(.x = regions,
.y = vars,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .y, "/region/", .x,
"/2020-11-02/summarised_estimates.rds")))
View(breakpoint_only_effect)
regions <- c("South West", "Wales", "Northern Ireland")
# Single breakpoint
breakpoint_only_effect <- purrr::map2(.x = regions,
.y = vars,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .y, "/region/", .x,
"/2020-11-02/summarised_estimates.rds")))
View(breakpoint_only_effect)
# Single breakpoint
breakpoint_only_effect <- purrr::map(.x = vars,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .y, "/region/", "South West"
"/2020-11-02/summarised_estimates.rds")))
# Single breakpoint
breakpoint_only_effect <- purrr::map(.x = vars,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .y, "/region/", "South West",
"/2020-11-02/summarised_estimates.rds")))
# Single breakpoint
breakpoint_only_effect <- purrr::map(.x = vars,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .y, "/region/", "Wales",
"/2020-11-02/summarised_estimates.rds")))
vars
models
regions
# Single breakpoint
breakpoint_only_effect <- purrr::map(.x = vars,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .y, "/region/", regions[2],
"/2020-11-02/summarised_estimates.rds")))
# Single breakpoint
breakpoint_only_effect <- purrr::map(.x = vars,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .x, "/region/", regions[2],
"/2020-11-02/summarised_estimates.rds")))
View(breakpoint_only_effect)
breakpoint_only_effect <- purrr::map2(.x = vars, .y = regions,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .x, "/region/", .y,
"/2020-11-02/summarised_estimates.rds")))
View(breakpoint_only_effect)
# Single breakpoint
effects <- list()
for(i in regions){
effects[i] <- purrr::map(.x = vars,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .x, "/region/", i,
"/2020-11-02/summarised_estimates.rds")))
names(breakpoint_only_effect) <- c("cases", "admissions", "deaths")
}
View(effects)
purrr::map(.x = vars,
~ readRDS(
paste0("rt-estimate/estimate-break/",
models[1], "/", .x, "/region/", "Wales",
"/2020-11-02/summarised_estimates.rds")))
regions_fn <- function(model, region){
readRDS(paste0("rt-estimate/estimate-break/",
model, "/", .x, "/region/", "Wales",
"/2020-11-02/summarised_estimates.rds"))}
regions_fn <- function(model, region){
readRDS(paste0("rt-estimate/estimate-break/",
model, "/", .x, "/region/", region,
"/2020-11-02/summarised_estimates.rds"))}
effects[i] <- purrr::map(.x = vars, .y = regions,
~ regions_fn(model = models[1], region = .y))
regions_fn <- function(model, var, region){
readRDS(paste0("rt-estimate/estimate-break/",
model, "/", var, "/region/", region,
"/2020-11-02/summarised_estimates.rds"))}
effects[i] <- purrr::map(.x = vars, .y = regions,
~ regions_fn(model = models[1],
var = .x,
region = .y))
test <- regions_fn(model = models[1], var = vars[1], region = regions[1])
effects[i] <- purrr::map(.x = vars, .y = regions,
~ regions_fn(model = models[1],
var = .x,
region = .y))
regions_fn <- function(model, var, region){
readRDS(paste0("rt-estimate/estimate-break/",
model, "/", var, "/region/", region,
"/2020-11-02/summarised_estimates.rds"))}
test <- regions_fn(model = models[1], var = vars[1], region = regions[1])
effects <- purrr::map(.x = vars, .y = regions,
~ regions_fn(model = models[1],
var = .x,
region = .y))
effects <- purrr::map(.x = vars, .y = regions,
~ regions_fn(model = models[1],
var = .x,
region = .y))
effects <- purrr::map(.x = vars, .y = regions,
~ regions_fn(model = models[1],
var = .x,
region = .y))
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/201101-update-rt-breakpoint.R')
View(models)
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/plot-breakpoint.R')
effects <- purrr::map(.x = vars, .y = regions,
~ regions_fn(model = models[1],
var = .x,
region = .y))
rm(list=ls())
x = "x"
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/201101-update-rt-breakpoint.R')
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/201101-update-rt-breakpoint.R')
# Save to csv -------------------------------------------------------------
readr::write_csv(models, here::here("rt-estimate/estimate-break", "firebreak-breakpoints.csv"))
vars <- c("cases", "admissions", "deaths")
models <- c("breakpoint-only",
"breakpoint-with-rw") #,
regions <- c("South West", "Wales", "Northern Ireland")
#"gp-breakpoint")
# Single breakpoint
effects <- list()
regions_fn <- function(model, var, region){
readRDS(paste0("rt-estimate/estimate-break/",
model, "/", var, "/region/", region,
"/2020-11-02/summarised_estimates.rds"))}
test <- regions_fn(model = models[1], var = vars[1], region = regions[1])
effects <- purrr::map(.x = vars, .y = regions,
~ regions_fn(model = models[1],
var = .x,
region = .y))
models[1]
test <- regions_fn(model = models[1], var = vars[1], region = regions[1])
View(test)
regions_fn <- function(model, var, region){
estimates <- readRDS(paste0("rt-estimate/estimate-break/",
model, "/", var, "/region/", region,
"/2020-11-02/summarised_estimates.rds"))
estimates$region <- region
estimates$source <- source
estimates$model <- model
return(estimates)
}
test <- regions_fn(model = models[1], var = vars[1], region = regions[1])
model = models[1]
var = vars[1]
region = regions[1]
estimates <- readRDS(paste0("rt-estimate/estimate-break/",
model, "/", var, "/region/", region,
"/2020-11-02/summarised_estimates.rds"))
estimates$region <- region
estimates$source <- source
estimates$source <- var
estimates$model <- model
rm(model, var, reigon)
rm(model, var, region)
regions_fn <- function(model, var, region){
estimates <- readRDS(paste0("rt-estimate/estimate-break/",
model, "/", var, "/region/", region,
"/2020-11-02/summarised_estimates.rds"))
estimates$region <- region
estimates$source <- var
estimates$model <- model
return(estimates)
}
test <- regions_fn(model = models[1], var = vars[1], region = regions[1])
test <- regions_fn(model = models[1], var = vars[1], region = regions[2])
test <- regions_fn(model = models[1], var = vars[1], region = regions[3])
model1var1 <- list()
for(i in 1:length(regions)){
model1var1[i] <- regions_fn(model = models[1], var = vars[1], region = regions[i])
}
View(model1var1)
model1var1[[1]]
View(estimates)
estimates <- estimates[estimates$variable == "breakpoints",]
m111 <- regions_fn(model = models[1], var = vars[1], region = regions[1])
m112 <- regions_fn(model = models[1], var = vars[1], region = regions[2])
m113 <- regions_fn(model = models[1], var = vars[1], region = regions[3])
m121 <- regions_fn(model = models[1], var = vars[2], region = regions[1])
m122 <- regions_fn(model = models[1], var = vars[2], region = regions[2])
m123 <- regions_fn(model = models[1], var = vars[2], region = regions[3])
m131 <- regions_fn(model = models[1], var = vars[3], region = regions[1])
m132 <- regions_fn(model = models[1], var = vars[3], region = regions[2])
m133 <- regions_fn(model = models[1], var = vars[3], region = regions[3])
m211 <- regions_fn(model = models[2], var = vars[1], region = regions[1])
m212 <- regions_fn(model = models[2], var = vars[1], region = regions[2])
m213 <- regions_fn(model = models[2], var = vars[1], region = regions[3])
m221 <- regions_fn(model = models[2], var = vars[1], region = regions[1])
m222 <- regions_fn(model = models[2], var = vars[1], region = regions[2])
m223 <- regions_fn(model = models[2], var = vars[1], region = regions[3])
m231 <- regions_fn(model = models[2], var = vars[1], region = regions[1])
m232 <- regions_fn(model = models[2], var = vars[1], region = regions[2])
m233 <- regions_fn(model = models[2], var = vars[1], region = regions[3])
rm(list = ls(grep("^m", .)))
rm(list = grep("^m", .))
rm(list = grep("^m"))
summary <- dplyr::bind_rows(m111, m112, m113,
m121, m122, m123,
m131, m132, m133,
m211, m212, m213,
m221, m222, m223,
m231, m232, m233)
View(summary)
# Ridiculous way to get summary because can't quite get purrr to play
regions_fn <- function(model, var, region){
estimates <- readRDS(paste0("rt-estimate/estimate-break/",
model, "/", var, "/region/", region,
"/2020-11-02/summarised_estimates.rds"))
estimates$region <- region
estimates$source <- var
estimates$model <- model
estimates <- estimates[estimates$variable == "breakpoints",]
return(estimates)
}
m111 <- regions_fn(model = models[1], var = vars[1], region = regions[1])
m112 <- regions_fn(model = models[1], var = vars[1], region = regions[2])
m113 <- regions_fn(model = models[1], var = vars[1], region = regions[3])
m121 <- regions_fn(model = models[1], var = vars[2], region = regions[1])
m122 <- regions_fn(model = models[1], var = vars[2], region = regions[2])
m123 <- regions_fn(model = models[1], var = vars[2], region = regions[3])
m131 <- regions_fn(model = models[1], var = vars[3], region = regions[1])
m132 <- regions_fn(model = models[1], var = vars[3], region = regions[2])
m133 <- regions_fn(model = models[1], var = vars[3], region = regions[3])
m211 <- regions_fn(model = models[2], var = vars[1], region = regions[1])
m212 <- regions_fn(model = models[2], var = vars[1], region = regions[2])
m213 <- regions_fn(model = models[2], var = vars[1], region = regions[3])
m221 <- regions_fn(model = models[2], var = vars[1], region = regions[1])
m222 <- regions_fn(model = models[2], var = vars[1], region = regions[2])
m223 <- regions_fn(model = models[2], var = vars[1], region = regions[3])
m231 <- regions_fn(model = models[2], var = vars[1], region = regions[1])
m232 <- regions_fn(model = models[2], var = vars[1], region = regions[2])
m233 <- regions_fn(model = models[2], var = vars[1], region = regions[3])
summary <- dplyr::bind_rows(m111, m112, m113,
m121, m122, m123,
m131, m132, m133,
m211, m212, m213,
m221, m222, m223,
m231, m232, m233)
View(summary)
summary <- dplyr::bind_rows(m111, m112, m113,
m121, m122, m123,
m131, m132, m133,
m211, m212, m213,
m221, m222, m223,
m231, m232, m233) %>%
dplyr::mutate(across(median:upper_90, exp))
summary <- dplyr::bind_rows(m111, m112, m113,
m121, m122, m123,
m131, m132, m133,
m211, m212, m213,
m221, m222, m223,
m231, m232, m233) %>%
dplyr::mutate(aplyr::across(median:upper_90, exp))
summary <- dplyr::bind_rows(m111, m112, m113,
m121, m122, m123,
m131, m132, m133,
m211, m212, m213,
m221, m222, m223,
m231, m232, m233) %>%
dplyr::mutate(dplyr::across(median:upper_90, exp))
ls()
grep("^m", ls())
rm(list = grep("^m", ls()))
warnings()
rm(list = grep("^m", ls(), value = TRUE))
View(summary)
m111 <- regions_fn(model = models[1], var = vars[1], region = regions[1])
m112 <- regions_fn(model = models[1], var = vars[1], region = regions[2])
m113 <- regions_fn(model = models[1], var = vars[1], region = regions[3])
m121 <- regions_fn(model = models[1], var = vars[2], region = regions[1])
m122 <- regions_fn(model = models[1], var = vars[2], region = regions[2])
m123 <- regions_fn(model = models[1], var = vars[2], region = regions[3])
m131 <- regions_fn(model = models[1], var = vars[3], region = regions[1])
m132 <- regions_fn(model = models[1], var = vars[3], region = regions[2])
m133 <- regions_fn(model = models[1], var = vars[3], region = regions[3])
m211 <- regions_fn(model = models[2], var = vars[1], region = regions[1])
m212 <- regions_fn(model = models[2], var = vars[1], region = regions[2])
m213 <- regions_fn(model = models[2], var = vars[1], region = regions[3])
m221 <- regions_fn(model = models[2], var = vars[2], region = regions[1])
m222 <- regions_fn(model = models[2], var = vars[2], region = regions[2])
m223 <- regions_fn(model = models[2], var = vars[2], region = regions[3])
m231 <- regions_fn(model = models[2], var = vars[3], region = regions[1])
m232 <- regions_fn(model = models[2], var = vars[3], region = regions[2])
m233 <- regions_fn(model = models[2], var = vars[3], region = regions[3])
summary <- dplyr::bind_rows(m111, m112, m113,
m121, m122, m123,
m131, m132, m133,
m211, m212, m213,
m221, m222, m223,
m231, m232, m233) %>%
dplyr::mutate(dplyr::across(median:upper_90, exp))
rm(list = grep("^m", ls(), value = TRUE))
vars <- c("cases", "admissions", "deaths")
models <- c("breakpoint-only",
"breakpoint-with-rw") #,
regions <- c("South West", "Wales", "Northern Ireland")
#"gp-breakpoint")
# Single breakpoint
effects <- list()
# Ridiculous way to get summary because can't quite get purrr to play
regions_fn <- function(model, var, region){
estimates <- readRDS(paste0("rt-estimate/estimate-break/",
model, "/", var, "/region/", region,
"/2020-11-02/summarised_estimates.rds"))
estimates$region <- region
estimates$source <- var
estimates$model <- model
estimates <- estimates[estimates$variable == "breakpoints",]
return(estimates)
}
m111 <- regions_fn(model = models[1], var = vars[1], region = regions[1])
m112 <- regions_fn(model = models[1], var = vars[1], region = regions[2])
m113 <- regions_fn(model = models[1], var = vars[1], region = regions[3])
m121 <- regions_fn(model = models[1], var = vars[2], region = regions[1])
m122 <- regions_fn(model = models[1], var = vars[2], region = regions[2])
m123 <- regions_fn(model = models[1], var = vars[2], region = regions[3])
m131 <- regions_fn(model = models[1], var = vars[3], region = regions[1])
m132 <- regions_fn(model = models[1], var = vars[3], region = regions[2])
m133 <- regions_fn(model = models[1], var = vars[3], region = regions[3])
m211 <- regions_fn(model = models[2], var = vars[1], region = regions[1])
m212 <- regions_fn(model = models[2], var = vars[1], region = regions[2])
m213 <- regions_fn(model = models[2], var = vars[1], region = regions[3])
m221 <- regions_fn(model = models[2], var = vars[2], region = regions[1])
m222 <- regions_fn(model = models[2], var = vars[2], region = regions[2])
m223 <- regions_fn(model = models[2], var = vars[2], region = regions[3])
m231 <- regions_fn(model = models[2], var = vars[3], region = regions[1])
m232 <- regions_fn(model = models[2], var = vars[3], region = regions[2])
m233 <- regions_fn(model = models[2], var = vars[3], region = regions[3])
summary <- dplyr::bind_rows(m111, m112, m113,
m121, m122, m123,
m131, m132, m133,
m211, m212, m213,
m221, m222, m223,
m231, m232, m233) %>%
dplyr::mutate(dplyr::across(median:upper_90, exp))
rm(list = grep("^m", ls(), value = TRUE))
View(summary)
summary <- dplyr::bind_rows(m111, m112, m113,
m121, m122, m123,
m131, m132, m133,
m211, m212, m213,
m221, m222, m223,
m231, m232, m233) %>%
dplyr::mutate(dplyr::across(median:upper_90, exp)) %>%
dplyr::group_by(model) %>%
dplyr::filter(strat == max(strat))
effects <- summary %>%
dplyr::group_by(model) %>%
dplyr::filter(strat == max(strat))
View(effects)
regions[3]
m113 <- regions_fn(model = models[1], var = vars[1], region = regions[3])
vars <- c("cases", "admissions", "deaths")
models <- c("breakpoint-only",
"breakpoint-with-rw") #,
regions <- c("South West", "Wales", "Northern Ireland")
m113 <- regions_fn(model = models[1], var = vars[1], region = regions[3])
m123 <- regions_fn(model = models[1], var = vars[2], region = regions[3])
m133 <- regions_fn(model = models[1], var = vars[3], region = regions[3])
m213 <- regions_fn(model = models[2], var = vars[1], region = regions[3])
m223 <- regions_fn(model = models[2], var = vars[2], region = regions[3])
m233 <- regions_fn(model = models[2], var = vars[3], region = regions[3])
View(m113)
View(m123)
View(m123)
View(m133)
View(m213)
rm(list=ls())
# Run breakpoint estimates
# Uses Epinow 2 v1.3
remotes::install_github("epiforecasts/EpiNow2")
?EpiNow2::regional_epinow
rm(list=ls())
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/format-rt-breakpoint.R')
Sys.Date()
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/breakpoint-effects.R')
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/format-rt-breakpoint.R')
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/format-rt-breakpoint.R')
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/breakpoint-effects.R')
source('C:/Users/kaths/GitHub/rt-comparison-uk-public/rt-estimate/estimate-break/plot-breakpoint.R')
models
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(plot(readRDS(here::here("rt-estimate/estimate-break", Sys.Date(), "sw-wales-ni.rds"))))
# Plot data --------------------------------------------------------------------
# get private data
# raw <- readRDS(path.expand(file.path("~", "code", "covid19_uk_forecast_data", "data", "processed", "latest_data.rds")))
raw <- readRDS(path.expand(file.path("C:", "Users", "kaths", "Github", "covid19_uk_forecast_data", "data", "processed", "latest_data.rds")))
View(raw)
dir.exists(here::here("rt-estimate", "estimate-break", Sys.Date()))
if (!dir.exists(here::here("rt-estimate", "estimate-break", Sys.Date()))) {
dir.create(here::here("rt-estimate", "estimate-break", Sys.Date()))
}
?file.copy
# Run report
file.copy(from = here::here("rt-estimate", "estimate-break", "generic-report.R"),
to = here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
# Run report
file.copy(from = here::here("rt-estimate", "estimate-break", "generic-report.R"),
to = here::here("rt-estimate", "estimate-break", Sys.Date()))
# Run report
file.create(here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
file.copy(from = here::here("rt-estimate", "estimate-break", "generic-report.R"),
to = here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
file.copy(from = here::here("rt-estimate", "estimate-break", "generic-report.R"),
to = here::here("rt-estimate", "estimate-break", Sys.Date()))
# Run report
file.create(here::here("rt-estimate", "estimate-break", Sys.Date(), "generic-report.R"))
file.copy(from = here::here("rt-estimate", "estimate-break", "generic-report.R"),
to = here::here("rt-estimate", "estimate-break", Sys.Date()))
here::here("rt-estimate", "estimate-break", Sys.Date())
here::here("rt-estimate", "estimate-break", Sys.Date(), "generic-report.R")
file.copy(here::here("rt-estimate", "estimate-break", "generic-report.R"),
here::here("rt-estimate", "estimate-break", Sys.Date()))
file.copy(here::here("rt-estimate", "estimate-break", "generic-report.R"),
here::here("rt-estimate", "estimate-break", Sys.Date()), "report.R")
file.copy(here::here("rt-estimate", "estimate-break", "generic-report.R"),
here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"), overwrite = TRUE)
file.copy(here::here("rt-estimate", "estimate-break", "generic-report.R"),
here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
source(here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
here::here("rt-estimate", "estimate-break", "generic-report.R")
# Run report
file.copy(here::here("rt-estimate", "estimate-break", "generic-report.R"),
here::here("rt-estimate", "estimate-break", Sys.Date(), "report.R"))
