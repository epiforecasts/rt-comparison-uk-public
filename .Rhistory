# theme(legend.position = "none") +
# theme(axis.text.x = element_blank()) +
labs(title = "Hospital admissions by age", y = "% admissions under 65", x = "")
plot(plot_age)
# Clean -------------------------------------------------------------------
age_admissions <- tidyr::unnest(raw_admissions, cumAdmissionsByAge) %>%
dplyr::mutate(date = lubridate::ymd(date)) %>%
# # De-cumulate
# dplyr::group_by(areaName, age) %>%
# dplyr::arrange(date, .by_group = TRUE) %>%
# dplyr::mutate(value = value - lag(value, 1)) %>%
# dplyr::ungroup() %>%
# Pivot wide
dplyr::select(-rate) %>%
tidyr::pivot_wider(id_cols = c("date", "areaName"), names_from = "age", values_from = "value") %>%
dplyr::rename(region = "areaName",
age1864 = "18_to_64",
age6584 = "65_to_84",
age05 = "0_to_5",
age617 = "6_to_17",
age85 = "85+") %>%
dplyr::mutate(perc_u65 = (age05 + age617 + age1864) / (age1864 + age6584 + age05 + age617 + age85))
# Plot --------------------------------------------------------------------
plot_age <- age_admissions %>%
ggplot(aes(x = date, col = region, fill = region)) +
geom_line(aes(y = perc_u65)) +
cowplot::theme_cowplot(font_size = 11) +
# scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
# theme(legend.position = "none") +
# theme(axis.text.x = element_blank()) +
labs(title = "Hospital admissions by age", y = "% admissions under 65", x = "")
plot(plot_age)
# Plot --------------------------------------------------------------------
plot_age <- age_admissions %>%
ggplot(aes(x = date, col = region, fill = region)) +
geom_line(aes(y = perc_u65)) +
cowplot::theme_cowplot(font_size = 11) +
# scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
# theme(legend.position = "none") +
# theme(axis.text.x = element_blank()) +
labs(title = "Hospital admissions, % under 65yrs", y = "% admissions under 65", x = "")
plot(plot_age)
# Clean -------------------------------------------------------------------
age_admissions <- tidyr::unnest(raw_admissions, cumAdmissionsByAge) %>%
dplyr::mutate(date = lubridate::ymd(date)) %>%
# De-cumulate
dplyr::group_by(areaName, age) %>%
dplyr::arrange(date, .by_group = TRUE) %>%
dplyr::mutate(value = value - lag(value, 1)) %>%
dplyr::ungroup() %>%
Pivot wide
dplyr::select(-rate) %>%
tidyr::pivot_wider(id_cols = c("date", "areaName"), names_from = "age", values_from = "value") %>%
dplyr::rename(region = "areaName",
age1864 = "18_to_64",
age6584 = "65_to_84",
age05 = "0_to_5",
age617 = "6_to_17",
age85 = "85+") %>%
dplyr::mutate(perc_u65 = (age05 + age617 + age1864) / (age1864 + age6584 + age05 + age617 + age85))
# Clean -------------------------------------------------------------------
age_admissions <- tidyr::unnest(raw_admissions, cumAdmissionsByAge) %>%
dplyr::mutate(date = lubridate::ymd(date)) %>%
# De-cumulate
dplyr::group_by(areaName, age) %>%
dplyr::arrange(date, .by_group = TRUE) %>%
dplyr::mutate(value = value - lag(value, 1)) %>%
dplyr::ungroup() %>%
# Pivot wide
dplyr::select(-rate) %>%
tidyr::pivot_wider(id_cols = c("date", "areaName"), names_from = "age", values_from = "value") %>%
dplyr::rename(region = "areaName",
age1864 = "18_to_64",
age6584 = "65_to_84",
age05 = "0_to_5",
age617 = "6_to_17",
age85 = "85+") %>%
dplyr::mutate(perc_u65 = (age05 + age617 + age1864) / (age1864 + age6584 + age05 + age617 + age85))
# Plot --------------------------------------------------------------------
plot_age <- age_admissions %>%
ggplot(aes(x = date, col = region, fill = region)) +
geom_line(aes(y = perc_u65)) +
cowplot::theme_cowplot(font_size = 11) +
# scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
# theme(legend.position = "none") +
# theme(axis.text.x = element_blank()) +
labs(title = "Hospital admissions, % under 65yrs", y = "% admissions under 65", x = "")
plot(plot_age)
# Clean -------------------------------------------------------------------
age_admissions <- tidyr::unnest(raw_admissions, cumAdmissionsByAge) %>%
dplyr::filter(areaName == "London") %>%
dplyr::mutate(date = lubridate::ymd(date)) %>%
# De-cumulate
dplyr::group_by(areaName, age) %>%
dplyr::arrange(date, .by_group = TRUE) %>%
dplyr::mutate(value = value - lag(value, 1)) %>%
dplyr::ungroup() %>%
# Pivot wide
dplyr::select(-rate) %>%
tidyr::pivot_wider(id_cols = c("date", "areaName"), names_from = "age", values_from = "value") %>%
dplyr::rename(region = "areaName",
age1864 = "18_to_64",
age6584 = "65_to_84",
age05 = "0_to_5",
age617 = "6_to_17",
age85 = "85+") %>%
dplyr::mutate(perc_u65 = (age05 + age617 + age1864) / (age1864 + age6584 + age05 + age617 + age85))
# Plot --------------------------------------------------------------------
plot_age <- age_admissions %>%
ggplot(aes(x = date, col = region, fill = region)) +
geom_line(aes(y = perc_u65)) +
cowplot::theme_cowplot(font_size = 11) +
# scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
# theme(legend.position = "none") +
# theme(axis.text.x = element_blank()) +
labs(title = "Hospital admissions, % under 65yrs", y = "% admissions under 65", x = "")
plot(plot_age)
# Clean -------------------------------------------------------------------
age_admissions <- tidyr::unnest(raw_admissions, cumAdmissionsByAge) %>%
# dplyr::filter(areaName == "London") %>%
dplyr::mutate(date = lubridate::ymd(date)) %>%
# De-cumulate
dplyr::group_by(areaName, age) %>%
dplyr::arrange(date, .by_group = TRUE) %>%
dplyr::mutate(value = value - lag(value, 1)) %>%
dplyr::ungroup() %>%
# Pivot wide
dplyr::select(-rate) %>%
tidyr::pivot_wider(id_cols = c("date", "areaName"), names_from = "age", values_from = "value") %>%
dplyr::rename(region = "areaName",
age1864 = "18_to_64",
age6584 = "65_to_84",
age05 = "0_to_5",
age617 = "6_to_17",
age85 = "85+") %>%
dplyr::mutate(perc_u65 = (age05 + age617 + age1864) / (age1864 + age6584 + age05 + age617 + age85))
# Plot --------------------------------------------------------------------
plot_age <- age_admissions %>%
ggplot(aes(x = date, col = region, fill = region)) +
geom_line(aes(y = perc_u65)) +
cowplot::theme_cowplot(font_size = 11) +
# scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
# theme(legend.position = "none") +
# theme(axis.text.x = element_blank()) +
labs(title = "Hospital admissions, % under 65yrs", y = "% admissions under 65", x = "")
plot(plot_age)
# Clean -------------------------------------------------------------------
age_admissions <- tidyr::unnest(raw_admissions, cumAdmissionsByAge) %>%
# dplyr::filter(areaName == "London") %>%
dplyr::mutate(date = lubridate::ymd(date)) %>%
# De-cumulate
dplyr::group_by(areaName, age) %>%
dplyr::arrange(date, .by_group = TRUE) %>%
dplyr::mutate(value = value - lag(value, 1)) %>%
dplyr::ungroup() %>%
# Pivot wide
dplyr::select(-rate) %>%
tidyr::pivot_wider(id_cols = c("date", "areaName"), names_from = "age", values_from = "value") %>%
dplyr::rename(region = "areaName",
age1864 = "18_to_64",
age6584 = "65_to_84",
age05 = "0_to_5",
age617 = "6_to_17",
age85 = "85+") %>%
dplyr::mutate(perc_u65 = (age05 + age617 + age1864) / (age1864 + age6584 + age05 + age617 + age85),
z_perc_u65 = scale(perc_u65, center = TRUE, scale = TRUE),
ma_perc_u65 = forecast::ma(perc_u65, order = 7))
# Plot --------------------------------------------------------------------
plot_age <- age_admissions %>%
ggplot(aes(x = date, col = region, fill = region)) +
geom_line(aes(y = z_perc_u65)) +
cowplot::theme_cowplot(font_size = 11) +
# scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
# theme(legend.position = "none") +
# theme(axis.text.x = element_blank()) +
labs(title = "Hospital admissions, % under 65yrs", y = "% admissions under 65", x = "")
plot(plot_age)
# Clean -------------------------------------------------------------------
age_admissions <- tidyr::unnest(raw_admissions, cumAdmissionsByAge) %>%
# dplyr::filter(areaName == "London") %>%
dplyr::mutate(date = lubridate::ymd(date)) %>%
# De-cumulate
dplyr::group_by(areaName, age) %>%
dplyr::arrange(date, .by_group = TRUE) %>%
dplyr::mutate(value = value - lag(value, 1)) %>%
dplyr::ungroup() %>%
# Pivot wide
dplyr::select(-rate) %>%
tidyr::pivot_wider(id_cols = c("date", "areaName"), names_from = "age", values_from = "value") %>%
dplyr::rename(region = "areaName",
age1864 = "18_to_64",
age6584 = "65_to_84",
age05 = "0_to_5",
age617 = "6_to_17",
age85 = "85+") %>%
dplyr::group_by(region) %>%
dplyr::mutate(perc_u65 = (age05 + age617 + age1864) / (age1864 + age6584 + age05 + age617 + age85),
z_perc_u65 = scale(perc_u65, center = TRUE, scale = TRUE),
ma_perc_u65 = forecast::ma(perc_u65, order = 7)) %>%
dplyr::ungroup()
# Plot --------------------------------------------------------------------
plot_age <- age_admissions %>%
ggplot(aes(x = date, col = region, fill = region)) +
geom_line(aes(y = z_perc_u65)) +
cowplot::theme_cowplot(font_size = 11) +
# scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
# theme(legend.position = "none") +
# theme(axis.text.x = element_blank()) +
labs(title = "Hospital admissions, % under 65yrs", y = "% admissions under 65", x = "")
plot(plot_age)
# Plot --------------------------------------------------------------------
plot_age <- age_admissions %>%
ggplot(aes(x = date, col = region, fill = region)) +
geom_line(aes(y = ma_perc_u65)) +
cowplot::theme_cowplot(font_size = 11) +
# scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
# theme(legend.position = "none") +
# theme(axis.text.x = element_blank()) +
labs(title = "Hospital admissions, % under 65yrs", y = "% admissions under 65", x = "")
plot(plot_age)
# Plot --------------------------------------------------------------------
plot_age <- age_admissions %>%
ggplot(aes(x = date, col = region, fill = region)) +
geom_line(aes(y = z_perc_u65)) +
cowplot::theme_cowplot(font_size = 11) +
# scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
# theme(legend.position = "none") +
# theme(axis.text.x = element_blank()) +
labs(title = "Hospital admissions, % under 65yrs", y = "% admissions under 65", x = "")
plot(plot_age)
# Merge plots
source("compare/plot-data.R")
source("compare/plot-rt.R")
source("compare/plot-ratios.R")
# Get region names and plotting colours
source("utils/utils.R")
# National ----------------------------------------------------------------
# Filter data in plots to nations
# Raw data: moving average
plot_ma$data <- plot_ma$data %>%
dplyr::filter(region %in% region_names$nations)
# Rt estimates
plot_rt$data <- plot_rt$data %>%
dplyr::filter(region %in% region_names$nations)
# Ratios
plot_ratio_caseb_deathb$data <- plot_ratio_caseb_deathb$data %>%
dplyr::filter(region %in% region_names$nations)
plot_ratio_caseb_hosp$data <- plot_ratio_caseb_hosp$data %>%
dplyr::filter(region %in% region_names$nations)
plot_ratio_hosp_deathb$data <- plot_ratio_hosp_deathb$data %>%
dplyr::filter(region %in% region_names$nations)
# Plot all
plot_national <- plot_ma +
plot_rt +
plot_ratio_caseb_deathb +
plot_ratio_hosp_deathb +
plot_ratio_caseb_hosp +
patchwork::plot_layout(nrow=6)
plot(plot_national)
# Merge plots
source("compare/plot-data.R")
source("compare/plot-rt.R")
source("compare/plot-ratios.R")
# Get region names and plotting colours
source("utils/utils.R")
# National ----------------------------------------------------------------
# Filter data in plots to nations
# Raw data: moving average
plot_ma$data <- plot_ma$data %>%
dplyr::filter(region %in% region_names$nations)
# Rt estimates
plot_rt$data <- plot_rt$data %>%
dplyr::filter(region %in% region_names$nations)
# Ratios
plot_ratio_caseb_deathb$data <- plot_ratio_caseb_deathb$data %>%
dplyr::filter(region %in% region_names$nations)
plot_ratio_caseb_hosp$data <- plot_ratio_caseb_hosp$data %>%
dplyr::filter(region %in% region_names$nations)
plot_ratio_hosp_deathb$data <- plot_ratio_hosp_deathb$data %>%
dplyr::filter(region %in% region_names$nations)
# Plot all
plot_national <- plot_ma +
plot_rt +
plot_ratio_caseb_deathb +
plot_ratio_hosp_deathb +
plot_ratio_caseb_hosp +
patchwork::plot_layout(nrow=6)
plot(plot_national)
# Merge plots
source("compare/plot-data.R")
source("compare/plot-rt.R")
source("compare/plot-ratios.R")
# Get region names and plotting colours
source("utils/utils.R")
# National ----------------------------------------------------------------
# Filter data in plots to nations
# Raw data: moving average
plot_ma$data <- plot_ma$data %>%
dplyr::filter(region %in% region_names$nations)
# Rt estimates
plot_rt$data <- plot_rt$data %>%
dplyr::filter(region %in% region_names$nations)
# Ratios
plot_ratio_caseb_deathb$data <- plot_ratio_caseb_deathb$data %>%
dplyr::filter(region %in% region_names$nations)
plot_ratio_caseb_hosp$data <- plot_ratio_caseb_hosp$data %>%
dplyr::filter(region %in% region_names$nations)
plot_ratio_hosp_deathb$data <- plot_ratio_hosp_deathb$data %>%
dplyr::filter(region %in% region_names$nations)
# Plot all
plot_national <- plot_ma +
plot_rt +
plot_ratio_caseb_deathb +
plot_ratio_hosp_deathb +
plot_ratio_caseb_hosp +
patchwork::plot_layout(nrow=6)
plot(plot_national)
# Merge plots
source("compare/plot-data.R")
source("compare/plot-rt.R")
source("compare/plot-ratios.R")
# Get region names and plotting colours
source("utils/utils.R")
# National ----------------------------------------------------------------
# Filter data in plots to nations
# Raw data: moving average
plot_ma$data <- plot_ma$data %>%
dplyr::filter(region %in% region_names$nations)
# Rt estimates
plot_rt$data <- plot_rt$data %>%
dplyr::filter(region %in% region_names$nations)
# Ratios
plot_ratio_caseb_deathb$data <- plot_ratio_caseb_deathb$data %>%
dplyr::filter(region %in% region_names$nations)
plot_ratio_caseb_hosp$data <- plot_ratio_caseb_hosp$data %>%
dplyr::filter(region %in% region_names$nations)
plot_ratio_hosp_deathb$data <- plot_ratio_hosp_deathb$data %>%
dplyr::filter(region %in% region_names$nations)
# Plot all
plot_national <- plot_ma +
plot_rt +
plot_ratio_caseb_deathb +
plot_ratio_hosp_deathb +
plot_ratio_caseb_hosp +
patchwork::plot_layout(nrow=6)
plolt(plot_national)
plot(plot_national)
# Plot 7 day MA
plot_ma <- data_ma %>%
ggplot() +
geom_line(aes(x = date, y = as.numeric(ma), colour = `Data source`)) +
facet_wrap("region", nrow = 1, scales = "free_y") +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "top") +
guides(linetype = guide_legend(override.aes = list(size = 2)))
plot(plot_ma)
# Plot 7 day MA
plot_ma <- data_ma %>%
ggplot() +
geom_line(aes(x = date, y = as.numeric(ma), colour = `Data source`)) +
facet_wrap("region", nrow = 1, scales = "free_y") +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "top") +
guides(linetype = guide_legend(override.aes = list(size = 5)))
plot(plot_ma)
# Plot 7 day MA
plot_ma <- data_ma %>%
ggplot() +
geom_line(aes(x = date, y = as.numeric(ma), colour = `Data source`)) +
facet_wrap("region", nrow = 1, scales = "free_y") +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "top") +
theme(legend.key.height = unit(1,"cm")) +
theme(axis.text.x = element_blank()) +
labs(title = "Smoothed counts", y = "Centred 7-day MA", x = "")
plot(plot_ma)
# Plot zscore
plot_zscore <- data_zscore %>%
ggplot() +
geom_line(aes(x = date, y = as.numeric(zscore), colour = `Data source`)) +
geom_hline(yintercept = 0, linetype = 2) +
facet_wrap("region", nrow = 1, scales = "free_y") +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "top") +
guides(guide_legend(override.aes = list(alpha=1))) +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised raw counts", y = "z-score", x = "")
plot(plot_zscore)
# Plot zscore
plot_zscore <- data_zscore %>%
ggplot() +
geom_line(aes(x = date, y = as.numeric(zscore), colour = `Data source`)) +
geom_hline(yintercept = 0, linetype = 2) +
facet_wrap("region", nrow = 1, scales = "free_y") +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "top") +
guides(colour = guide_legend(override.aes = list(alpha=1))) +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised raw counts", y = "z-score", x = "")
plot(plot_zscore)
# Plot zscore
plot_zscore <- data_zscore %>%
ggplot() +
geom_line(aes(x = date, y = as.numeric(zscore), colour = `Data source`)) +
geom_hline(yintercept = 0, linetype = 2) +
facet_wrap("region", nrow = 1, scales = "free_y") +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "top") +
guides(colour = guide_legend(override.aes = list(alpha=5))) +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised raw counts", y = "z-score", x = "")
plot(plot_zscore)
# Plot 7 day MA
plot_ma <- data_ma %>%
ggplot() +
geom_line(aes(x = date, y = as.numeric(ma), colour = `Data source`)) +
facet_wrap("region", nrow = 1, scales = "free_y") +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "top") +
theme(legend.key.height = unit(2,"cm")) +
theme(axis.text.x = element_blank()) +
labs(title = "Smoothed counts", y = "Centred 7-day MA", x = "")
plot(plot_ma)
# Merge plots
source("compare/plot-data.R")
source("compare/plot-rt.R")
source("compare/plot-ratios.R")
# Get region names and plotting colours
source("utils/utils.R")
# National ----------------------------------------------------------------
# Filter data in plots to nations
# Raw data: moving average
plot_ma$data <- plot_ma$data %>%
dplyr::filter(region %in% region_names$nations)
# Rt estimates
plot_rt$data <- plot_rt$data %>%
dplyr::filter(region %in% region_names$nations)
# Ratios
plot_ratio_caseb_deathb$data <- plot_ratio_caseb_deathb$data %>%
dplyr::filter(region %in% region_names$nations)
plot_ratio_caseb_hosp$data <- plot_ratio_caseb_hosp$data %>%
dplyr::filter(region %in% region_names$nations)
plot_ratio_hosp_deathb$data <- plot_ratio_hosp_deathb$data %>%
dplyr::filter(region %in% region_names$nations)
# Plot all
plot_national <- plot_ma +
plot_rt +
plot_ratio_caseb_deathb +
plot_ratio_hosp_deathb +
plot_ratio_caseb_hosp +
patchwork::plot_layout(nrow=6)
# Regional ----------------------------------------------------------------
source("compare/plot-data.R")
source("compare/plot-rt.R")
source("compare/plot-ratios.R")
# Raw data: moving average
plot_ma$data <- plot_ma$data %>%
dplyr::filter(region %in% region_names$nhsregions)
# Rt estimates
plot_rt$data <- plot_rt$data %>%
dplyr::filter(region %in% region_names$nhsregions)
# Ratios
plot_ratio_caseb_deathb$data <- plot_ratio_caseb_deathb$data %>%
dplyr::filter(region %in% region_names$nhsregions)
plot_ratio_caseb_hosp$data <- plot_ratio_caseb_hosp$data %>%
dplyr::filter(region %in% region_names$nhsregions)
plot_ratio_hosp_deathb$data <- plot_ratio_hosp_deathb$data %>%
dplyr::filter(region %in% region_names$nhsregions)
# All
plot_regional <- plot_ma +
plot_rt +
plot_ratio_caseb_deathb +
plot_ratio_hosp_deathb +
plot_ratio_caseb_hosp +
patchwork::plot_layout(nrow=6)
plot(plot_regional)
View(summary_ratios)
regional_ratios <- dplyr::filter(summary_ratios, region %in% region_names$nhsregions)
View(regional_ratios)
london_july <- dplyr::filter(regional_ratios, region == "London" & date %in% "2020-07")
london_july <- dplyr::filter(regional_ratios, region == "London" & lubridate::month(date) == "July")
london_july <- dplyr::filter(regional_ratios, region == "London" & lubridate::month(date) == 7)
View(london_july)
mean(london_july$caseb_hosp_med)
london_july <- london_july[1:19,]
mean(london_july$caseb_hosp_med)
mean(london_july$caseb_hosp_l90)
mean(london_july$caseb_hosp_u90)
rm(list=ls())
